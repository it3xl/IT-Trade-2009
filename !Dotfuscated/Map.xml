<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.1.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2010-07-04T01:35:44</timestamp>
        <product version="4.7.1000.26314" user="Ilya Tretyakov" serial="105657-EVA-5536082E-6057B029-CBB052F9-E499B795">Dotfuscator Professional Edition EVALUATION</product>
    </header>
    <mapping>
        <module>
            <name>ITTrade.exe</name>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;tabItem&gt;j__TPar</name>
                    <newname>eval_a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;invoice&gt;j__TPar</name>
                    <newname>eval_b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`2</name>
                <newname>eval_aw</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_invoice</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_tabItem</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;invoice&gt;i__Field</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;tabItem&gt;i__Field</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a0</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>a1</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>a</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, float64, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(Neodynamic.WPF.Pdf417ErrorCorrection)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[]&amp;, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](int32[], int32[][], int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](string, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](string, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[], bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[]&amp;, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[], bool)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[]&amp;, int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[])</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32[](string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32[](unsigned int8[])</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32[](string)</signature>
                        <name>e</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>g</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>h</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>i</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>j</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>k</name>
                        <newname>l</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>aa</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ab</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ac</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ad</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>ae</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>af</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ag</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>ah</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ai</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>aj</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ak</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>al</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>g</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>h</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>j</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>k</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>l</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>n</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>o</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>p</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>q</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>s</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>t</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>u</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>v</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>w</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>y</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>z</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a2</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a3</name>
                <newname>at</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a4</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>b</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a5</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>a6</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>f</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>g</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>h</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>i</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>a7</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>aa</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ab</name>
                <newname>bd</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ab/ag</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>ab/ap</signature>
                        <name>a0</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a1</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a2</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a3</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a4</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a5</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a6</name>
                    </field>
                    <field>
                        <signature>ab/ai</signature>
                        <name>a7</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a9</name>
                    </field>
                    <field>
                        <signature>ab/z</signature>
                        <name>aa</name>
                    </field>
                    <field>
                        <signature>ab/v</signature>
                        <name>ab</name>
                    </field>
                    <field>
                        <signature>ab/ah</signature>
                        <name>ac</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>ad</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>ae</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>af</name>
                    </field>
                    <field>
                        <signature>ab/as</signature>
                        <name>ag</name>
                    </field>
                    <field>
                        <signature>ab/as</signature>
                        <name>ah</name>
                    </field>
                    <field>
                        <signature>ab/as</signature>
                        <name>ai</name>
                    </field>
                    <field>
                        <signature>ab/as</signature>
                        <name>aj</name>
                    </field>
                    <field>
                        <signature>ab/j</signature>
                        <name>ak</name>
                    </field>
                    <field>
                        <signature>ab/l</signature>
                        <name>al</name>
                    </field>
                    <field>
                        <signature>ab/l</signature>
                        <name>am</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>an</name>
                    </field>
                    <field>
                        <signature>ab/ac</signature>
                        <name>ao</name>
                    </field>
                    <field>
                        <signature>ab/ab</signature>
                        <name>ap</name>
                    </field>
                    <field>
                        <signature>ab/k</signature>
                        <name>aq</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>ar</name>
                    </field>
                    <field>
                        <signature>ab/ae</signature>
                        <name>as</name>
                    </field>
                    <field>
                        <signature>ab/az</signature>
                        <name>at</name>
                    </field>
                    <field>
                        <signature>ab/s</signature>
                        <name>au</name>
                    </field>
                    <field>
                        <signature>ab/r</signature>
                        <name>av</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>aw</name>
                    </field>
                    <field>
                        <signature>ab/u</signature>
                        <name>ax</name>
                    </field>
                    <field>
                        <signature>ab/t</signature>
                        <name>ay</name>
                    </field>
                    <field>
                        <signature>ab/b</signature>
                        <name>az</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>ab/k</signature>
                        <name>b0</name>
                    </field>
                    <field>
                        <signature>ab/ax</signature>
                        <name>b1</name>
                    </field>
                    <field>
                        <signature>ab/ax</signature>
                        <name>b2</name>
                    </field>
                    <field>
                        <signature>ab/ax</signature>
                        <name>b3</name>
                    </field>
                    <field>
                        <signature>ab/ax</signature>
                        <name>b4</name>
                    </field>
                    <field>
                        <signature>ab/al</signature>
                        <name>b5</name>
                    </field>
                    <field>
                        <signature>ab/al</signature>
                        <name>b6</name>
                    </field>
                    <field>
                        <signature>ab/aw</signature>
                        <name>b7</name>
                    </field>
                    <field>
                        <signature>ab/aq</signature>
                        <name>b8</name>
                    </field>
                    <field>
                        <signature>ab/am</signature>
                        <name>b9</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ba</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bb</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bc</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bd</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>be</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bf</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bg</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bh</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bi</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bj</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bk</name>
                    </field>
                    <field>
                        <signature>ab/ag</signature>
                        <name>bl</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bm</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bn</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bo</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bp</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bq</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>br</name>
                    </field>
                    <field>
                        <signature>ab/h</signature>
                        <name>bs</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>bt</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>bu</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>bv</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>bw</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>bx</name>
                    </field>
                    <field>
                        <signature>ab/m</signature>
                        <name>by</name>
                    </field>
                    <field>
                        <signature>ab/k</signature>
                        <name>bz</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>ab/p</signature>
                        <name>c0</name>
                    </field>
                    <field>
                        <signature>ab/av</signature>
                        <name>c1</name>
                    </field>
                    <field>
                        <signature>ab/at</signature>
                        <name>c2</name>
                    </field>
                    <field>
                        <signature>ab/i</signature>
                        <name>c3</name>
                    </field>
                    <field>
                        <signature>ab/f</signature>
                        <name>c4</name>
                    </field>
                    <field>
                        <signature>ab/y</signature>
                        <name>c5</name>
                    </field>
                    <field>
                        <signature>ab/ap</signature>
                        <name>c6</name>
                    </field>
                    <field>
                        <signature>ab/aj</signature>
                        <name>c7</name>
                    </field>
                    <field>
                        <signature>ab/ar</signature>
                        <name>c8</name>
                    </field>
                    <field>
                        <signature>ab/ay</signature>
                        <name>c9</name>
                    </field>
                    <field>
                        <signature>ab/ac</signature>
                        <name>ca</name>
                    </field>
                    <field>
                        <signature>ab/af</signature>
                        <name>cb</name>
                    </field>
                    <field>
                        <signature>ab/s</signature>
                        <name>cc</name>
                    </field>
                    <field>
                        <signature>ab/r</signature>
                        <name>cd</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>ce</name>
                    </field>
                    <field>
                        <signature>ab/t</signature>
                        <name>cf</name>
                    </field>
                    <field>
                        <signature>ab/d</signature>
                        <name>cg</name>
                    </field>
                    <field>
                        <signature>ab/a2</signature>
                        <name>ch</name>
                    </field>
                    <field>
                        <signature>ab/p</signature>
                        <name>ci</name>
                    </field>
                    <field>
                        <signature>ab/at</signature>
                        <name>cj</name>
                    </field>
                    <field>
                        <signature>ab/y</signature>
                        <name>ck</name>
                    </field>
                    <field>
                        <signature>ab/ap</signature>
                        <name>cl</name>
                    </field>
                    <field>
                        <signature>ab/aa</signature>
                        <name>cm</name>
                    </field>
                    <field>
                        <signature>ab/e</signature>
                        <name>cn</name>
                    </field>
                    <field>
                        <signature>ab/q</signature>
                        <name>co</name>
                    </field>
                    <field>
                        <signature>ab/j</signature>
                        <name>cp</name>
                    </field>
                    <field>
                        <signature>ab/an</signature>
                        <name>cq</name>
                    </field>
                    <field>
                        <signature>ab/o</signature>
                        <name>cr</name>
                    </field>
                    <field>
                        <signature>ab/u</signature>
                        <name>cs</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>ct</name>
                    </field>
                    <field>
                        <signature>ab/x</signature>
                        <name>cu</name>
                    </field>
                    <field>
                        <signature>ab/t</signature>
                        <name>cv</name>
                    </field>
                    <field>
                        <signature>ab/a</signature>
                        <name>cw</name>
                    </field>
                    <field>
                        <signature>ab/d</signature>
                        <name>cx</name>
                    </field>
                    <field>
                        <signature>ab/a2</signature>
                        <name>cy</name>
                    </field>
                    <field>
                        <signature>ab/au</signature>
                        <name>cz</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d0</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d1</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d2</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d3</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d4</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d5</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d6</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d7</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d8</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>d9</name>
                    </field>
                    <field>
                        <signature>ab/a1</signature>
                        <name>da</name>
                    </field>
                    <field>
                        <signature>ab/c</signature>
                        <name>db</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dc</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dd</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>de</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>df</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dg</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dh</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>di</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dj</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dk</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dl</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dm</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dn</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>do</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dp</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dq</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dr</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>ds</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dt</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>du</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dv</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dw</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dx</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dy</name>
                    </field>
                    <field>
                        <signature>ab/ao</signature>
                        <name>dz</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>ab/ak</signature>
                        <name>ea</name>
                    </field>
                    <field>
                        <signature>ab/ak</signature>
                        <name>eb</name>
                    </field>
                    <field>
                        <signature>ab/j</signature>
                        <name>ec</name>
                    </field>
                    <field>
                        <signature>ab/j</signature>
                        <name>ed</name>
                    </field>
                    <field>
                        <signature>ab/j</signature>
                        <name>ee</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>h</name>
                    </field>
                    <field>
                        <signature>ab/g</signature>
                        <name>i</name>
                    </field>
                    <field>
                        <signature>ab/ad</signature>
                        <name>j</name>
                    </field>
                    <field>
                        <signature>ab/a</signature>
                        <name>k</name>
                    </field>
                    <field>
                        <signature>ab/f</signature>
                        <name>l</name>
                    </field>
                    <field>
                        <signature>ab/ar</signature>
                        <name>m</name>
                    </field>
                    <field>
                        <signature>ab/l</signature>
                        <name>n</name>
                    </field>
                    <field>
                        <signature>ab/am</signature>
                        <name>o</name>
                    </field>
                    <field>
                        <signature>ab/a0</signature>
                        <name>p</name>
                    </field>
                    <field>
                        <signature>ab/o</signature>
                        <name>q</name>
                    </field>
                    <field>
                        <signature>ab/w</signature>
                        <name>r</name>
                    </field>
                    <field>
                        <signature>ab/w</signature>
                        <name>s</name>
                    </field>
                    <field>
                        <signature>ab/w</signature>
                        <name>t</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>u</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>v</name>
                    </field>
                    <field>
                        <signature>ab/n</signature>
                        <name>w</name>
                    </field>
                    <field>
                        <signature>ab/z</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>ab/z</signature>
                        <name>y</name>
                    </field>
                    <field>
                        <signature>ab/z</signature>
                        <name>z</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ab/a</name>
                <newname>bd/o</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/a0</name>
                <newname>bd/a0</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/a1</name>
                <newname>bd/aw</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/a2</name>
                <newname>bd/j</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/aa</name>
                <newname>bd/av</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ab</name>
                <newname>bd/q</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ac</name>
                <newname>bd/h</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ad</name>
                <newname>bd/ay</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ae</name>
                <newname>bd/at</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/af</name>
                <newname>bd/a</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ag</name>
                <newname>bd/d</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ah</name>
                <newname>bd/k</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ai</name>
                <newname>bd/c</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/aj</name>
                <newname>bd/az</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ak</name>
                <newname>bd/ad</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/al</name>
                <newname>bd/au</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/am</name>
                <newname>bd/a1</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/an</name>
                <newname>bd/ae</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ao</name>
                <newname>bd/m</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ap</name>
                <newname>bd/l</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/aq</name>
                <newname>bd/s</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ar</name>
                <newname>bd/p</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/as</name>
                <newname>bd/g</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/at</name>
                <newname>bd/a2</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/au</name>
                <newname>bd/b</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/av</name>
                <newname>bd/e</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/aw</name>
                <newname>bd/r</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ax</name>
                <newname>bd/ax</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/ay</name>
                <newname>bd/y</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/az</name>
                <newname>bd/f</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/b</name>
                <newname>bd/ap</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/c</name>
                <newname>bd/ao</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/d</name>
                <newname>bd/ar</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/e</name>
                <newname>bd/aq</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/f</name>
                <newname>bd/as</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/g</name>
                <newname>bd/ac</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/h</name>
                <newname>bd/ab</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/i</name>
                <newname>bd/aj</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/j</name>
                <newname>bd/ak</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/k</name>
                <newname>bd/i</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/l</name>
                <newname>bd/al</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/m</name>
                <newname>bd/n</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/n</name>
                <newname>bd/an</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/o</name>
                <newname>bd/am</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/p</name>
                <newname>bd/ag</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/q</name>
                <newname>bd/af</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/r</name>
                <newname>bd/w</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/s</name>
                <newname>bd/ah</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/t</name>
                <newname>bd/ai</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/u</name>
                <newname>bd/x</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/v</name>
                <newname>bd/aa</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/w</name>
                <newname>bd/z</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/x</name>
                <newname>bd/u</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/y</name>
                <newname>bd/t</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ab/z</name>
                <newname>bd/v</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ac</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string, System.Windows.TextAlignment)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ad</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>g</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>h</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>i</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ae</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>af</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ag</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ah</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int16(int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, bool, bool, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixFormat)</signature>
                        <name>a</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int16(int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int16(int32, int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int16(int32, int32)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int64(int32, int32)</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixFormat()</signature>
                        <name>g</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>g</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>h</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>i</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16[]</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a0</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a1</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a2</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a3</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a4</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a5</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>a6</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>a7</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>a8</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>aa</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ab</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ac</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>ad</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>ae</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>af</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>ag</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>ah</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ai</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>aj</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>ak</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>al</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>am</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>an</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ao</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ap</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>aq</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ar</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>as</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>at</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>au</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>av</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>aw</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ax</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ay</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>az</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>f</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>g</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>h</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>i</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>j</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>k</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>l</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>m</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>n</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>o</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>p</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>q</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int16[]</signature>
                        <name>r</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>s</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>t</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>u</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>v</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>w</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>y</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>z</name>
                        <newname>ac</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ai</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>aj</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ak</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>al</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>am</name>
                <newname>bg</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>d</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>an</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8(char, char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ao</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>a</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.MicroPdf417Version(int32)</signature>
                        <name>b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>f</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>g</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>h</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>i</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>j</name>
                        <newname>o</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ap</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string, Neodynamic.WPF.Alignment, float64)</signature>
                        <name>a</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool[]</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>aq</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(Neodynamic.WPF.FIM)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[]</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ar</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>as</name>
                <newname>be</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>at</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>au</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>av</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Media.DrawingContext, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>h</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>i</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>j</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.GuidelineSet</signature>
                        <name>k</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>l</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>n</name>
                        <newname>r</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>aw</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>f</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>g</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>h</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ax</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8(char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int8)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int8[0...,0...], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32[], unsigned int8[], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>e</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32)</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeEncoding(string)</signature>
                        <name>f</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32)</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>g</name>
                    </method>
                    <method>
                        <signature>unsigned int8[0...,0...](string)</signature>
                        <name>h</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>aa</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>ab</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>ac</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>ad</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>ae</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>af</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>ag</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>ah</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>ai</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>aj</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>ak</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>al</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>am</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>an</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>h</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>i</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>j</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>k</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>l</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>m</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>n</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Text.Encoding</signature>
                        <name>o</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>p</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>q</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>s</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>t</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>u</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>v</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>w</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>y</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>z</name>
                        <newname>ad</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ay</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string, string&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, int32[]&amp;, int32[]&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(string, int32[]&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>h</name>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>i</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>j</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>k</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>l</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>m</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>n</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>o</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>p</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>az</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>b</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>c</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>d</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>DotfuscatorAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>e</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>f</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>char(string)</signature>
                        <name>b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>h</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>i</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>j</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>k</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>l</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>g</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>h</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>i</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.GuidelineSet</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.Exceptions</name>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>IT.Exceptions/ArgumentIncorrect</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.Exceptions/BusinessLogicFault</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.Exceptions/CodeLogicError</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.ExceptionUtils</name>
                <methodlist>
                    <method>
                        <signature>string(System.Exception)</signature>
                        <name>GetMessageFromLastInnerException</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.IO.BarcodeTransferedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Barcode</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.IO.BarcodeTransferedHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, IT.IO.BarcodeTransferedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, IT.IO.BarcodeTransferedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.IO.SerialPortManager</name>
                <newname>eval_ap</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ApparatSettings_Updated</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>IT.IO.BarcodeTransferedHandler()</signature>
                        <name>get_BarcodeReceiver</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MountPorts</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(IT.IO.BarcodeTransferedHandler)</signature>
                        <name>set_BarcodeReceiver</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>unmountPorts</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>IT.IO.BarcodeTransferedHandler</signature>
                        <name>__barcodeReceiver</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,IT.IO.SerialPortWrapper&gt;</signature>
                        <name>grabedPorts</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool modreq (System.Runtime.CompilerServices.IsVolatile)</signature>
                        <name>isGrabbingActive</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>lockerForChangeActivity</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.IO.SerialPortWrapper</name>
                <newname>eval_h</newname>
                <methodlist>
                    <method>
                        <signature>void(string, IT.IO.BarcodeTransferedHandler)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(IT.IO.BarcodeTransferedHandler)</signature>
                        <name>add_barcodeTransfered</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>deleteOldBufferedPortData</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>dispose</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PortName</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>onBarcodeTransfered</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.IO.Ports.SerialDataReceivedEventArgs)</signature>
                        <name>port_DataReceived</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.IO.Ports.SerialErrorReceivedEventArgs)</signature>
                        <name>port_ErrorReceived</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>processBarcode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(IT.IO.BarcodeTransferedHandler)</signature>
                        <name>remove_barcodeTransfered</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>IT.IO.BarcodeTransferedHandler</signature>
                        <name>barcodeTransfered</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>buffer</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Ports.SerialPort</signature>
                        <name>port</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.WPF.Barcode.BarcodePrint</name>
                <methodlist>
                    <method>
                        <signature>void(string, float64, int32)</signature>
                        <name>Print</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.WPF.SingleInstanceModes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>IT.WPF.SingleInstanceModes</signature>
                        <name>ForEveryUser</name>
                    </field>
                    <field>
                        <signature>IT.WPF.SingleInstanceModes</signature>
                        <name>NotInited</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.WPF.UI.TemplateManager</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Windows.DependencyObject)</signature>
                        <name>GetAncestorElement</name>
                    </method>
                    <method>
                        <signature>System.Windows.DependencyObject(System.Windows.DependencyObject)</signature>
                        <name>GetTemplateParent</name>
                    </method>
                    <method>
                        <signature>System.Windows.DependencyObject(System.Windows.DependencyObject)</signature>
                        <name>GetTemplateRootElement</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>IT.WPF.ValidationRules.BarcodeValidationRule</name>
                <newname>eval_ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.ValidationResult(string)</signature>
                        <name>GetIsBarcodeValid</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>getIsBarcodeValidForSyntax</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.ValidationResult(object, System.Globalization.CultureInfo)</signature>
                        <name>Validate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeProfessional</signature>
                        <name>barcoderInstans</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mess1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mess2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mess3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mess4</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minBarcode128Length</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ValidationResult</signature>
                        <name>validationResult</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>IT.WPF.WpfSingleInstance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;OtherInstanceAttemptedToStart&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RemoveApplicationsStartupDeadlockForStartupCrushedWindows&gt;b__2</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;RemoveApplicationsStartupDeadlockForStartupCrushedWindows&gt;b__3</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Window)</signature>
                        <name>&lt;RemoveApplicationsStartupDeadlockForStartupCrushedWindows&gt;b__4</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window)</signature>
                        <name>&lt;RemoveApplicationsStartupDeadlockForStartupCrushedWindows&gt;b__5</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Make</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(IT.WPF.SingleInstanceModes)</signature>
                        <name>Make</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, bool)</signature>
                        <name>OtherInstanceAttemptedToStart</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveApplicationsStartupDeadlockForStartupCrushedWindows</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>AutoExitAplicationIfStartupDeadlock</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate7</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Window,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate8</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;System.Windows.Window&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.App</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Dispatcher_UnhandledException&gt;b__7</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;OnStartup&gt;b__0</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Navigation.NavigationEventArgs)</signature>
                        <name>&lt;OnStartup&gt;b__1</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;OnStartup&gt;b__2</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;OnStartup&gt;b__3</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)</signature>
                        <name>Current_DispatcherUnhandledException</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.UnhandledExceptionEventArgs)</signature>
                        <name>CurrentDomain_UnhandledException</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)</signature>
                        <name>Dispatcher_UnhandledException</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs)</signature>
                        <name>Dispatcher_UnhandledExceptionFilter</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLoaded</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.StartupEventArgs)</signature>
                        <name>OnStartup</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsLoaded</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsLoaded&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate6</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate8</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ApparatSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ApparatSettings/UpdatedEventHandler)</signature>
                        <name>add_ApparatSettingsUpdated</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BarcodePrinterName</name>
                    </method>
                    <method>
                        <signature>ITTrade.ApparatSettings()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PortNames</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PrinterName</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ApparatSettings/UpdatedEventHandler)</signature>
                        <name>remove_ApparatSettingsUpdated</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BarcodePrinterName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PrinterName</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>updatedRaise</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>apparatSettingsFileName</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ApparatSettings/UpdatedEventHandler</signature>
                        <name>ApparatSettingsUpdated</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>barcodePrinterName</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ApparatSettings</signature>
                        <name>current</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>printerName</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>Rs232BarcodeScanersUsedComPorts</name>
                    </field>
                    <field>
                        <signature>System.Xml.Serialization.XmlSerializer</signature>
                        <name>xmlSerializer</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ApparatSettings/UpdatedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, System.EventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.Business.Invoice</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.Business.InvoiceSaleMode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Decimal(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;SetAmounts&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;SetAmounts&gt;b__1</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.InvoicesProduct(string)</signature>
                        <name>AddProductOrIncreaseSaleQuantity</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.IList)</signature>
                        <name>AttachProductsMonitoring</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>ITTrade.Business.InvoicesProduct(string)</signature>
                        <name>DecreaseProductSaleQuantityOrRemove</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>DispatcherTimer_Tick</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CustomerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CustomerName</name>
                    </method>
                    <method>
                        <signature>Microsoft.Windows.Controls.DataGrid()</signature>
                        <name>get_HostDataGrid</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_InvoiceAmount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InvoiceBarcode</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.InvoiceSaleMode()</signature>
                        <name>get_InvoiceSaleMode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsChanged</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRetail</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsStored</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsWholesale</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_PositionsAmount</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Business.InvoicesProduct&gt;()</signature>
                        <name>get_Products</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_SellerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SellerName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TypeName</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.Invoice(string, System.Windows.Window)</signature>
                        <name>GetStoredInvoiceTry</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitAmountMonitoring</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.PropertyChangedEventArgs)</signature>
                        <name>Notify_PropertyChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyAmountChanged</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>NotifyPropertyChanged</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>ProductsCollectionChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CustomerId</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CustomerName</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Windows.Controls.DataGrid)</signature>
                        <name>set_HostDataGrid</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_InvoiceAmount</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InvoiceBarcode</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.InvoiceSaleMode)</signature>
                        <name>set_InvoiceSaleMode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsChanged</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsStored</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_PositionsAmount</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_SellerId</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SellerName</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetAmounts</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartAmountMonitoring</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>_amountMonitoringDispatcherTimer</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Business.InvoicesProduct&gt;</signature>
                        <name>_products</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;CustomerId&gt;k__BackingField</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CustomerName&gt;k__BackingField</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Windows.Controls.DataGrid</signature>
                        <name>&lt;HostDataGrid&gt;k__BackingField</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>&lt;InvoiceAmount&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InvoiceBarcode&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.InvoiceSaleMode</signature>
                        <name>&lt;InvoiceSaleMode&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsChanged&gt;k__BackingField</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsStored&gt;k__BackingField</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>&lt;PositionsAmount&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;SellerId&gt;k__BackingField</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SellerName&gt;k__BackingField</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.InvoicesProduct,System.Decimal&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.InvoicesProduct,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.Invoice/&lt;&gt;c__DisplayClass6</name>
                <newname>ITTrade.Business.Invoice/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;AddProductOrIncreaseSaleQuantity&gt;b__5</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>productBarcode</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.Invoice/&lt;&gt;c__DisplayClass9</name>
                <newname>ITTrade.Business.Invoice/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;DecreaseProductSaleQuantityOrRemove&gt;b__8</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>productBarcode</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.InvoiceSaleMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.InvoiceSaleMode</signature>
                        <name>NotInited</name>
                    </field>
                    <field>
                        <signature>ITTrade.Business.InvoiceSaleMode</signature>
                        <name>Retail</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>ITTrade.Business.InvoiceSaleMode</signature>
                        <name>Wholesale</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.InvoicesProduct</name>
                <methodlist>
                    <method>
                        <signature>void(string, ITTrade.Business.Invoice)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;set_SaleQuantity&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DecreaseQuantity</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentSalePrice</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Exist</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRetail</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsWholesale</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_ProductAmount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductGroupName</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ProductId</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow()</signature>
                        <name>get_ProductRow</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SaleQuantity</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>IncreaseQuantity</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>NotifyPropertyChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Exist</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SaleQuantity</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.Invoice</signature>
                        <name>_invoice</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRow</signature>
                        <name>_productRow</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_saleQuantity</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Exist&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;)</signature>
                        <name>&lt;CheckAndSave&gt;b__19</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;)</signature>
                        <name>&lt;CheckAndSave&gt;b__1a</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>&lt;CheckAndSave&gt;b__1b</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BarcodeCheckUnique</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BarcodeSetNewUniqueBarcode</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckAndSave</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateNewProductForEditSafely</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateNewProductForEditUnsafely</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>DeletePurchaseSafely</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>DeletePurchaseUnsafely</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>EditProductFromBarcode</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>EditProductFromId</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.ProductEditer()</signature>
                        <name>get_Current</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.ProductEditer/EditMode()</signature>
                        <name>get_Mode</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.ProductEditer/ManagersProduct()</signature>
                        <name>get_ProductCurrent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetIsBarcodeValid</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Action)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/EditMode, System.Nullable`1&lt;int64&gt;, string)</signature>
                        <name>InitProductEditer</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProductDelete</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ProductEditByBarcode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>ProductEditExisted</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ProductGetCanDelete</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Data.DataView(string)</signature>
                        <name>ProductSearchByBarcode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProductUndoChangesSafely</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProductUndoChangesUnsafely</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PurchaseCreateNew</name>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>PurchaseGetCanDelete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveProductAndPurchaseAfterValidation</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer)</signature>
                        <name>set_Current</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/EditMode)</signature>
                        <name>set_Mode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetView</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>_bindDataForEditingOnView</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet</signature>
                        <name>_dataSet</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>_hostWindowForCenteringMessages</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/ManagersProduct</signature>
                        <name>_managersProductCurrent</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/EditMode</signature>
                        <name>&lt;Mode&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer</signature>
                        <name>current</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/&lt;&gt;c__DisplayClass11</name>
                <newname>ITTrade.Business.ProductEditer/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;EditProductFromId&gt;b__f</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>productId</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/&lt;&gt;c__DisplayClass24</name>
                <newname>ITTrade.Business.ProductEditer/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DeletePurchaseSafely&gt;b__22</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/ManagersPurchase</signature>
                        <name>managersPurchase</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/&lt;&gt;c__DisplayClassa</name>
                <newname>ITTrade.Business.ProductEditer/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;EditProductFromBarcode&gt;b__8</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;EditProductFromBarcode&gt;b__9</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>productBarcode</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/EditMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/EditMode</signature>
                        <name>Existed</name>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/EditMode</signature>
                        <name>JustCreatedNotSaved</name>
                    </field>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/EditMode</signature>
                        <name>Undefined</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/ManagersProduct</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.Business.ProductEditer/ManagersPurchase(ITTrade.ITTradeDataSet/PurchaseRow)</signature>
                        <name>&lt;.ctor&gt;b__2b</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>&lt;get_IsPurchasesHaseErrors&gt;b__2d</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/ManagersPurchase)</signature>
                        <name>&lt;SavePurchases&gt;b__30</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;set_Purchases&gt;b__2f</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Article</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDelete</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPurchasesHaseErrors</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifyDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProductGroupId</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ProductId</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow()</signature>
                        <name>get_ProductRow</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Business.ProductEditer/ManagersPurchase&gt;()</signature>
                        <name>get_Purchases</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable()</signature>
                        <name>get_TableProduct</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>NotifyPropertyChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SavePurchases</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Article</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanDelete</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsChanged</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProductGroupId</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ProductId</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Business.ProductEditer/ManagersPurchase&gt;)</signature>
                        <name>set_Purchases</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetCanDelete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetIsChanged</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetNoChanged</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer</signature>
                        <name>_productEditer</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Business.ProductEditer/ManagersPurchase&gt;</signature>
                        <name>_purchases</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsChanged&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.ProductEditer/ManagersPurchase,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2e</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.ProductEditer/ManagersPurchase</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.Business.ProductEditer/ManagersProduct, ITTrade.ITTradeDataSet/PurchaseRow)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDelete</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifyDate</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_PurchaseId</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_PurchasePrice</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StockInTrade</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>NotifyPropertyChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_PurchaseId</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_PurchasePrice</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StockInTrade</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>SetPurchaseId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.ProductEditer/ManagersProduct</signature>
                        <name>_parentManagersProduct</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow</signature>
                        <name>PurchaseRow</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Business.SetChangedViewDelegate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(bool, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.Controls.TopStatus</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>parentWindow_Activated</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>parentWindow_Deactivated</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>TopStatus_Loaded</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>FocusMarcker</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.Confirmation</name>
                <newname>eval_bc</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.ConfirmationsChain</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>Confirm</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>ITTrade.IT.ConfirmationsChain(System.Action`1&lt;System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;&gt;)</signature>
                        <name>Enqueue</name>
                    </method>
                    <method>
                        <signature>System.Action()</signature>
                        <name>get_DoneAction</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InvokeNextOrFinish</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>set_DoneAction</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;System.Action`1&lt;System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;&gt;&gt;</signature>
                        <name>_confirmActions</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isStarted</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;DoneAction&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.Logger</name>
                <methodlist>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CurrentDomain_DomainUnload</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Allowed</name>
                    </method>
                    <method>
                        <signature>System.IO.StreamWriter()</signature>
                        <name>get_StreamWriter</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, string)</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteInternaly</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_isStreamWriterInited</name>
                    </field>
                    <field>
                        <signature>System.IO.StreamWriter</signature>
                        <name>_streamWriter</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.Logger/&lt;&gt;c__DisplayClass1</name>
                <newname>ITTrade.IT.Logger/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>&lt;Write&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>message</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.Sounds</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.IT.TargetSound)</signature>
                        <name>Play</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.TargetSound</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.IT.TargetSound</signature>
                        <name>QuantityEqualsOne</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.TargetSound</signature>
                        <name>QuantityEqualsZero</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.TargetSound</signature>
                        <name>UnknownProductBarcode</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.TargetSound</signature>
                        <name>UnusedProductBarcode</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.Barcode.BarcodeHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;ProcessReceivedBarcode&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, ITTrade.IT.WPF.Barcode.BarcodeHelper/ProcessReceivedBarcodeDelegate)</signature>
                        <name>BarcodeReceiveStart</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window)</signature>
                        <name>BarcodeReceivingStop</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeHelper/WindowAndHanndler()</signature>
                        <name>get_ActiveWindowAndBarcodeReceivingHandler</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, IT.IO.BarcodeTransferedEventArgs)</signature>
                        <name>ProcessReceivedBarcode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>WindowActivated</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>_keyForProcessReceivedBarcodeHandler</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>_windowRegisteredKey</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.Barcode.BarcodeHelper/ProcessReceivedBarcodeDelegate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.Barcode.BarcodeHelper/WindowAndHanndler</name>
                <newname>ITTrade.IT.WPF.Barcode.BarcodeHelper/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.IT.WPF.Barcode.BarcodeHelper/ProcessReceivedBarcodeDelegate)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeHelper/WindowAndHanndler()</signature>
                        <name>get_Empty</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsWindowReceivingBarcode</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeHelper/WindowAndHanndler</signature>
                        <name>_empty</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeHelper/ProcessReceivedBarcodeDelegate</signature>
                        <name>BarcodeReceivingHandler</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.Barcode.BarcodeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Command</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Customer</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Invoice</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Product</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Seller</name>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.Barcode.BarcodeTypeUtils</name>
                <newname>eval_bb</newname>
                <methodlist>
                    <method>
                        <signature>ITTrade.IT.WPF.Barcode.BarcodeType(string)</signature>
                        <name>GetBarcodeType</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CommandPrefix</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CustomerPrefix</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvoicePrefix</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SellerPrefix</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.InvoicePrinting</name>
                <newname>eval_y</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData)</signature>
                        <name>&lt;PrintInvoice&gt;b__10</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;PrintInvoice&gt;b__d</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>string(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;PrintInvoice&gt;b__e</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(ITTrade.Business.InvoicesProduct)</signature>
                        <name>&lt;PrintInvoice&gt;b__f</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.Grid()</signature>
                        <name>GetInvoiceTableHeader</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData, System.Windows.Controls.DockPanel)</signature>
                        <name>PrepareFirstPagePrinting</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData, System.Windows.Controls.DockPanel)</signature>
                        <name>PrepareNotFirstPagePrinting</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.TradeWindow)</signature>
                        <name>PrintInvoice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Documents.TableRowGroup(System.Windows.Documents.Table)</signature>
                        <name>SetInvoiceTable</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.InvoicesProduct,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.InvoicesProduct,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;ITTrade.Business.InvoicesProduct,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate13</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate14</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations</name>
                <newname>eval_w</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Documents.FlowDocument, System.Action`1&lt;ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPageCountValid</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PageCount</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size()</signature>
                        <name>get_PageSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.Documents.IDocumentPaginatorSource()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>System.Windows.Documents.DocumentPage(int32)</signature>
                        <name>GetPage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Size)</signature>
                        <name>set_PageSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Documents.DocumentPaginator</signature>
                        <name>_documentPaginator</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData&gt;</signature>
                        <name>_extrnalManipulationsHandler</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations/ManipulationsData</name>
                <newname>eval_w/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Documents.DocumentPage()</signature>
                        <name>get_DocumentPage</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations()</signature>
                        <name>get_DocumentPaginatorWithPageManipulations</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PageNumber</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.Grid()</signature>
                        <name>get_RootElement</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Documents.DocumentPage)</signature>
                        <name>set_DocumentPage</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations)</signature>
                        <name>set_DocumentPaginatorWithPageManipulations</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PageNumber</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.Grid)</signature>
                        <name>set_RootElement</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Documents.DocumentPage</signature>
                        <name>&lt;DocumentPage&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>ITTrade.IT.WPF.UI.DocumentPaginatorWithPageManipulations</signature>
                        <name>&lt;DocumentPaginatorWithPageManipulations&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PageNumber&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>&lt;RootElement&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValidationUtils</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetElementChildsHaveErrors</name>
                    </method>
                    <method>
                        <signature>void(System.Text.StringBuilder, System.Windows.DependencyObject)</signature>
                        <name>GetErrorMessagesFromChildElements</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Controls.ValidationError)</signature>
                        <name>GetHaveInnerException</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(System.Windows.Controls.ValidationError)</signature>
                        <name>GetMessageFromLastInnerException</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.BooleanToVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.ColorForZeroConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.DateTimeConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.DecimalConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.DecimalPositiveConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.DoubleConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.DummyDebugConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.IntPositiveConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.StringToUpperCaseConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.IT.WPF.ValueConverts.ValidationErrorMessageConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Data.DataSet()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseDataTable()</signature>
                        <name>get_Purchase</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRelationCollection()</signature>
                        <name>get_Relations</name>
                    </method>
                    <method>
                        <signature>System.Data.SchemaSerializationMode()</signature>
                        <name>get_SchemaSerializationMode</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTableCollection()</signature>
                        <name>get_Tables</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchema()</signature>
                        <name>GetSchemaSerializable</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchemaComplexType(System.Xml.Schema.XmlSchemaSet)</signature>
                        <name>GetTypedDataSetSchema</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitClass</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeDerivedDataSet</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitVars</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>InitVars</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlReader)</signature>
                        <name>ReadXmlSerializable</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CollectionChangeEventArgs)</signature>
                        <name>SchemaChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Data.SchemaSerializationMode)</signature>
                        <name>set_SchemaSerializationMode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeProduct</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializePurchase</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeRelations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeTables</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.SchemaSerializationMode</signature>
                        <name>_schemaSerializationMode</name>
                    </field>
                    <field>
                        <signature>System.Data.DataRelation</signature>
                        <name>relationFK_Products_Purchase</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable</signature>
                        <name>tableProduct</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseDataTable</signature>
                        <name>tablePurchase</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/ProductDataTable</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>add_ProductRowChanged</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>add_ProductRowChanging</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>add_ProductRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>add_ProductRowDeleting</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow(string, System.Decimal, System.Decimal, bool, System.DateTime, System.DateTime, int32, string, string, bool)</signature>
                        <name>AddProductRow</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRow)</signature>
                        <name>AddProductRow</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow(int64)</signature>
                        <name>FindByProductID</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ArticleColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CanDeleteColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CreationDateColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CurrentRetailPriceColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CurrentWholesalePriceColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_DiscountForbiddenColumn</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ModifyDateColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ProductBarcodeColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ProductGroupIDColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ProductGroupNameColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ProductIDColumn</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>GetRowType</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchemaComplexType(System.Xml.Schema.XmlSchemaSet)</signature>
                        <name>GetTypedTableSchema</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitClass</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitVars</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow()</signature>
                        <name>NewProductRow</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRow(System.Data.DataRowBuilder)</signature>
                        <name>NewRowFromBuilder</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowChanging</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowDeleting</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>remove_ProductRowChanged</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>remove_ProductRowChanging</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>remove_ProductRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRowChangeEventHandler)</signature>
                        <name>remove_ProductRowDeleting</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRow)</signature>
                        <name>RemoveProductRow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnArticle</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCanDelete</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCreationDate</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCurrentRetailPrice</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCurrentWholesalePrice</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnDiscountForbidden</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnModifyDate</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnProductBarcode</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnProductGroupID</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnProductGroupName</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnProductID</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRowChangeEventHandler</signature>
                        <name>ProductRowChanged</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRowChangeEventHandler</signature>
                        <name>ProductRowChanging</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRowChangeEventHandler</signature>
                        <name>ProductRowDeleted</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRowChangeEventHandler</signature>
                        <name>ProductRowDeleting</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/ProductRow</name>
                <methodlist>
                    <method>
                        <signature>void(System.Data.DataRowBuilder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Article</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDelete</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifyDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProductGroupID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductGroupName</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ProductID</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow[]()</signature>
                        <name>GetPurchaseRows</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsArticleNull</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsDiscountForbiddenNull</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsProductGroupIDNull</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Article</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanDelete</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationDate</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifyDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProductGroupID</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductGroupName</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ProductID</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetArticleNull</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetDiscountForbiddenNull</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetProductGroupIDNull</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable</signature>
                        <name>tableProduct</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/ProductRowChangeEvent</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRow, System.Data.DataRowAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRowAction()</signature>
                        <name>get_Action</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow()</signature>
                        <name>get_Row</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataRowAction</signature>
                        <name>eventAction</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/ProductRow</signature>
                        <name>eventRow</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/ProductRowChangeEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ITTrade.ITTradeDataSet/ProductRowChangeEvent, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ITTrade.ITTradeDataSet/ProductRowChangeEvent)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/PurchaseDataTable</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataTable)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>add_PurchaseRowChanged</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>add_PurchaseRowChanging</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>add_PurchaseRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>add_PurchaseRowDeleting</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow(ITTrade.ITTradeDataSet/ProductRow, System.Decimal, int32, bool, System.DateTime, System.DateTime)</signature>
                        <name>AddPurchaseRow</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRow)</signature>
                        <name>AddPurchaseRow</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable()</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow(int64)</signature>
                        <name>FindByPurchaseID</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CanDeleteColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_CreationDateColumn</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ModifyDateColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_ProductIDColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_PurchaseIDColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_PurchasePriceColumn</name>
                    </method>
                    <method>
                        <signature>System.Data.DataColumn()</signature>
                        <name>get_StockInTradeColumn</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>GetRowType</name>
                    </method>
                    <method>
                        <signature>System.Xml.Schema.XmlSchemaComplexType(System.Xml.Schema.XmlSchemaSet)</signature>
                        <name>GetTypedTableSchema</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitClass</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitVars</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow()</signature>
                        <name>NewPurchaseRow</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRow(System.Data.DataRowBuilder)</signature>
                        <name>NewRowFromBuilder</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowChanging</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRowChangeEventArgs)</signature>
                        <name>OnRowDeleting</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>remove_PurchaseRowChanged</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>remove_PurchaseRowChanging</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>remove_PurchaseRowDeleted</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler)</signature>
                        <name>remove_PurchaseRowDeleting</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRow)</signature>
                        <name>RemovePurchaseRow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCanDelete</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnCreationDate</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnModifyDate</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnProductID</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnPurchaseID</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnPurchasePrice</name>
                    </field>
                    <field>
                        <signature>System.Data.DataColumn</signature>
                        <name>columnStockInTrade</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler</signature>
                        <name>PurchaseRowChanged</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler</signature>
                        <name>PurchaseRowChanging</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler</signature>
                        <name>PurchaseRowDeleted</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler</signature>
                        <name>PurchaseRowDeleting</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/PurchaseRow</name>
                <methodlist>
                    <method>
                        <signature>void(System.Data.DataRowBuilder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDelete</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifyDate</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ProductID</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductRow()</signature>
                        <name>get_ProductRow</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_PurchaseID</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_PurchasePrice</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StockInTrade</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanDelete</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationDate</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifyDate</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ProductID</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/ProductRow)</signature>
                        <name>set_ProductRow</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_PurchaseID</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_PurchasePrice</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StockInTrade</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseDataTable</signature>
                        <name>tablePurchase</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/PurchaseRowChangeEvent</name>
                <methodlist>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSet/PurchaseRow, System.Data.DataRowAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRowAction()</signature>
                        <name>get_Action</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow()</signature>
                        <name>get_Row</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.DataRowAction</signature>
                        <name>eventAction</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSet/PurchaseRow</signature>
                        <name>eventRow</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSet/PurchaseRowChangeEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, ITTrade.ITTradeDataSet/PurchaseRowChangeEvent, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, ITTrade.ITTradeDataSet/PurchaseRowChangeEvent)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.ITTradeDataSetTableAdapters.ProductTableAdapter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/ProductDataTable)</signature>
                        <name>Fill</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/ProductDataTable, string)</signature>
                        <name>FillByProductBarcode</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/ProductDataTable, string)</signature>
                        <name>FillByProductBarcodePart</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/ProductDataTable, int64)</signature>
                        <name>FillByProductID</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlDataAdapter()</signature>
                        <name>get_Adapter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ClearBeforeFill</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlCommand[]()</signature>
                        <name>get_CommandCollection</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlConnection()</signature>
                        <name>get_Connection</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlTransaction()</signature>
                        <name>get_Transaction</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable()</signature>
                        <name>GetData</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable(string)</signature>
                        <name>GetDataByProductBarcode</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable(string)</signature>
                        <name>GetDataByProductBarcodePart</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/ProductDataTable(int64)</signature>
                        <name>GetDataByProductID</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>GetIsProductBarcodeUnique</name>
                    </method>
                    <method>
                        <signature>object(int64)</signature>
                        <name>GetIsProductCanDelete</name>
                    </method>
                    <method>
                        <signature>int32(string&amp;)</signature>
                        <name>GetNewUniqueProductBarcode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitAdapter</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCommandCollection</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitConnection</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Nullable`1&lt;int64&gt;, System.Nullable`1&lt;bool&gt;&amp;, string&amp;)</signature>
                        <name>ProductDelete</name>
                    </method>
                    <method>
                        <signature>int32(System.Nullable`1&lt;int64&gt;&amp;, string, System.Nullable`1&lt;int32&gt;, string, System.Nullable`1&lt;System.Decimal&gt;, System.Nullable`1&lt;System.Decimal&gt;, System.Nullable`1&lt;bool&gt;, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>ProductSave</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ClearBeforeFill</name>
                    </method>
                    <method>
                        <signature>void(System.Data.SqlClient.SqlConnection)</signature>
                        <name>set_Connection</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Data.SqlClient.SqlTransaction)</signature>
                        <name>set_Transaction</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.SqlClient.SqlDataAdapter</signature>
                        <name>_adapter</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_clearBeforeFill</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlCommand[]</signature>
                        <name>_commandCollection</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlConnection</signature>
                        <name>_connection</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlTransaction</signature>
                        <name>_transaction</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSetTableAdapters.PurchaseTableAdapter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/PurchaseDataTable)</signature>
                        <name>Fill</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/PurchaseDataTable, int64)</signature>
                        <name>FillByProductID</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlDataAdapter()</signature>
                        <name>get_Adapter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ClearBeforeFill</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlCommand[]()</signature>
                        <name>get_CommandCollection</name>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlConnection()</signature>
                        <name>get_Connection</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Data.SqlClient.SqlTransaction()</signature>
                        <name>get_Transaction</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseDataTable()</signature>
                        <name>GetData</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSet/PurchaseDataTable(int64)</signature>
                        <name>GetDataByProductID</name>
                    </method>
                    <method>
                        <signature>object(int64)</signature>
                        <name>GetIsPurchaseCanDelete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitAdapter</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCommandCollection</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitConnection</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(int64, System.Decimal, int32)</signature>
                        <name>InsertNoCreationDate</name>
                    </method>
                    <method>
                        <signature>int32(System.Nullable`1&lt;int64&gt;, System.Nullable`1&lt;bool&gt;&amp;, string&amp;)</signature>
                        <name>PurchaseDelete</name>
                    </method>
                    <method>
                        <signature>int32(System.Nullable`1&lt;int64&gt;&amp;, System.Nullable`1&lt;int64&gt;, System.Nullable`1&lt;System.Decimal&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>PurchaseSave</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ClearBeforeFill</name>
                    </method>
                    <method>
                        <signature>void(System.Data.SqlClient.SqlConnection)</signature>
                        <name>set_Connection</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Data.SqlClient.SqlTransaction)</signature>
                        <name>set_Transaction</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet/PurchaseDataTable)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>int32(System.Data.DataRow)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>int32(System.Data.DataRow[])</signature>
                        <name>Update</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.SqlClient.SqlDataAdapter</signature>
                        <name>_adapter</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_clearBeforeFill</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlCommand[]</signature>
                        <name>_commandCollection</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlConnection</signature>
                        <name>_connection</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Data.SqlClient.SqlTransaction</signature>
                        <name>_transaction</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_BackupDataSetBeforeUpdate</name>
                    </method>
                    <method>
                        <signature>System.Data.IDbConnection()</signature>
                        <name>get_Connection</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.PurchaseTableAdapter()</signature>
                        <name>get_PurchaseTableAdapter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TableAdapterInstanceCount</name>
                    </method>
                    <method>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption()</signature>
                        <name>get_UpdateOrder</name>
                    </method>
                    <method>
                        <signature>System.Data.DataRow[](System.Data.DataRow[], System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;)</signature>
                        <name>GetRealUpdatedRows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Data.IDbConnection)</signature>
                        <name>MatchTableAdapterConnection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_BackupDataSetBeforeUpdate</name>
                    </method>
                    <method>
                        <signature>void(System.Data.IDbConnection)</signature>
                        <name>set_Connection</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSetTableAdapters.PurchaseTableAdapter)</signature>
                        <name>set_PurchaseTableAdapter</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption)</signature>
                        <name>set_UpdateOrder</name>
                    </method>
                    <method>
                        <signature>void(System.Data.DataRow[], System.Data.DataRelation, bool)</signature>
                        <name>SortSelfReferenceRows</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet)</signature>
                        <name>UpdateAll</name>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet, System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;)</signature>
                        <name>UpdateDeletedRows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet, System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;)</signature>
                        <name>UpdateInsertedRows</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(ITTrade.ITTradeDataSet, System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;, System.Collections.Generic.List`1&lt;System.Data.DataRow&gt;)</signature>
                        <name>UpdateUpdatedRows</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_backupDataSetBeforeUpdate</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Data.IDbConnection</signature>
                        <name>_connection</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.PurchaseTableAdapter</signature>
                        <name>_purchaseTableAdapter</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption</signature>
                        <name>_updateOrder</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/SelfReferenceComparer</name>
                <newname>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Data.DataRelation, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Data.DataRow, System.Data.DataRow)</signature>
                        <name>Compare</name>
                    </method>
                    <method>
                        <signature>bool(System.Data.DataRow, System.Data.DataRow)</signature>
                        <name>IsChildAndParent</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_childFirst</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Data.DataRelation</signature>
                        <name>_relation</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption</signature>
                        <name>InsertUpdateDelete</name>
                    </field>
                    <field>
                        <signature>ITTrade.ITTradeDataSetTableAdapters.TableAdapterManager/UpdateOrderOption</signature>
                        <name>UpdateInsertDelete</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ManagerWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;SetFocusOnFirstByingPrice&gt;b__4</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddGroupButton_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>BarcodePrintButton_Click</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ValidationErrorEventArgs)</signature>
                        <name>BarcodeTB_ErrorStateChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>BarcodeUniqueCheck_Click</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>BarcodeUniqueCreate_Click</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BindDataForEditing</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>CreatrNewProduct_Click</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>EditProductFromSearchResults_Click</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>HideProductSearchResults_Click</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitProductEditerOnLoaded</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitProductGroupsData</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ManagerWindow_Loaded</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>MenuItemOpenTradeWindow_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>MenuItemShowEquipment_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>PrintBarcodeFromWindow</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>PrintBarcodeInContextMenuButton_Click</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ProcessRecivedBarcode</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>ProductDeleteCommand_CanExecute</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>ProductDeleteCommand_Executed</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>PurchaseCreateNew_CanExecute</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>PurchaseCreateNew_Executed</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>PurchaseDeleteCommand_Executed</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>PurchaseTB_Loaded</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>SaveCommand_CanExecute</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>SaveCommand_Executed</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>SearchButton_Click</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SearcheProducts</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>SearcheText_KeyDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Windows.Controls.SelectedCellsChangedEventArgs)</signature>
                        <name>SearchProductResultsGrid_SelectedCellsChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetFocusOnFirstByingPrice</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>UndoCommand_CanExecute</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>UndoCommand_Executed</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>ЗакупкаDeleteCommand_CanExecute</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>_canUndoBackground</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isNeedSetFocusOnFirstByPurchaseTextBox</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>_saveErrorBrush</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Slider</signature>
                        <name>BarcodeDensity</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>BarcodePrintButton</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>BarcodeTB</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>CreateNewZakupku</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>EditedMarckerUI</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>MainMenu</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>PrintButtonPlace</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>ProductDataGrid</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ComboBox</signature>
                        <name>ProductGroupsComboBox</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabItem</signature>
                        <name>ProductTabItem</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Windows.Controls.DataGrid</signature>
                        <name>PurchaseGrid</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>RootValidationStackPanel</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>SaveButton</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>SaveButtonPlace</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>SearchButton</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>SearchByBarcodeAlert</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>SearcheText</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Windows.Controls.DataGrid</signature>
                        <name>SearchProductResultsGrid</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>SearchProductResultsPlace</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabControl</signature>
                        <name>TabControl1</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ManagerWindow/UiUtils</name>
                <newname>ITTrade.ManagerWindow/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>ITTrade.ManagerWindow()</signature>
                        <name>GetSingletonManagerWindow</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>ITTrade.TradeWindow()</signature>
                        <name>GetSingletonTradeWindow</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowSingletonManagerWindow</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowSingletonTradeWindow</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTrade.MenuAddActions</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.MenuAddActions</signature>
                        <name>CreateOptTab</name>
                    </field>
                    <field>
                        <signature>ITTrade.MenuAddActions</signature>
                        <name>CreateRoznicaTab</name>
                    </field>
                    <field>
                        <signature>ITTrade.MenuAddActions</signature>
                        <name>NotInitedValue</name>
                    </field>
                    <field>
                        <signature>ITTrade.MenuAddActions</signature>
                        <name>OpenManagerVindow</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Models.Product</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.Models.Product(int64, System.Decimal, System.Decimal, bool, bool, System.DateTime, System.DateTime, string)</signature>
                        <name>CreateProduct</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Article</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDelete</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>System.Decimal()</signature>
                        <name>get_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifyDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>ITTrade.Models.ProductGroup()</signature>
                        <name>get_ProductGroup</name>
                    </method>
                    <method>
                        <signature>System.Data.Objects.DataClasses.EntityReference`1&lt;ITTrade.Models.ProductGroup&gt;()</signature>
                        <name>get_ProductGroupReference</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ProductID</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Article</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanDelete</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationDate</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentRetailPrice</name>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>set_CurrentWholesalePrice</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DiscountForbidden</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifyDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductBarcode</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.Models.ProductGroup)</signature>
                        <name>set_ProductGroup</name>
                    </method>
                    <method>
                        <signature>void(System.Data.Objects.DataClasses.EntityReference`1&lt;ITTrade.Models.ProductGroup&gt;)</signature>
                        <name>set_ProductGroupReference</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ProductID</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_Article</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_CanDelete</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_CreationDate</name>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_CurrentRetailPrice</name>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>_CurrentWholesalePrice</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_DiscountForbidden</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_ModifyDate</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_ProductBarcode</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_ProductID</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Models.ProductGroup</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.Models.ProductGroup(int32, string, System.DateTime)</signature>
                        <name>CreateProductGroup</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateCreation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Data.Objects.DataClasses.EntityCollection`1&lt;ITTrade.Models.Product&gt;()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProductGroupID</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateCreation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(System.Data.Objects.DataClasses.EntityCollection`1&lt;ITTrade.Models.Product&gt;)</signature>
                        <name>set_Product</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProductGroupID</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_DateCreation</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_Name</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_ProductGroupID</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Models.ProductGroupEntities</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Data.EntityClient.EntityConnection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.Models.Product)</signature>
                        <name>AddToProduct</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.Models.ProductGroup)</signature>
                        <name>AddToProductGroup</name>
                    </method>
                    <method>
                        <signature>System.Data.Objects.ObjectQuery`1&lt;ITTrade.Models.Product&gt;()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>System.Data.Objects.ObjectQuery`1&lt;ITTrade.Models.ProductGroup&gt;()</signature>
                        <name>get_ProductGroup</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Data.Objects.ObjectQuery`1&lt;ITTrade.Models.Product&gt;</signature>
                        <name>_Product</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Data.Objects.ObjectQuery`1&lt;ITTrade.Models.ProductGroup&gt;</signature>
                        <name>_ProductGroup</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ProductGroupWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddNewItemButton_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>getIsValueExist</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>getIsValueUnique</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>initDataContext</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>productGroups_CollectionChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, Microsoft.Windows.Controls.DataGridCellEditEndingEventArgs)</signature>
                        <name>ProductGroupsDataGrid_CellEditEnding</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.Models.ProductGroup)</signature>
                        <name>RestoreProductGroupName</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ReventChangesButton_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>SaveButton_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ShowMessageSafely</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>AddNewItemButton</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>NewItemNameTextBox</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Models.ProductGroupEntities</signature>
                        <name>productGroupEntitys</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;ITTrade.Models.ProductGroup&gt;</signature>
                        <name>productGroups</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Windows.Controls.DataGrid</signature>
                        <name>ProductGroupsDataGrid</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ProductGroupWindow/&lt;&gt;c__DisplayClass1</name>
                <newname>ITTrade.ProductGroupWindow/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowMessageSafely&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>message</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ProductGroupWindow/&lt;&gt;c__DisplayClass4</name>
                <newname>ITTrade.ProductGroupWindow/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Models.ProductGroup)</signature>
                        <name>&lt;getIsValueUnique&gt;b__3</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>newCheckedValue</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ProductGroupWindow/&lt;&gt;c__DisplayClass7</name>
                <newname>ITTrade.ProductGroupWindow/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ITTrade.Models.ProductGroup)</signature>
                        <name>&lt;getIsValueExist&gt;b__6</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>newCheckedValue</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.ProgramSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ApplySettings_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>BarcodePrinterNameTextBoxSelect_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>PrinterNameTextBoxSelect_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ProgramSettings_Loaded</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>BarcodePrinterNameTextBox</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ListBox</signature>
                        <name>BarcodeScanerPoptNamesListBox</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>PrinterNameTextBox</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>SettingsRootStackPanel</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ITTradeConnectionString</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ITTradeConnectionString1</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TestDatabaseConnectionString</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SoundsAllowed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SoundsAllowed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SoundsAllowed&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.TradeWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`2&lt;System.Windows.Controls.TabItem,ITTrade.Business.Invoice&gt;(System.Windows.Controls.TabItem)</signature>
                        <name>&lt;FindTabWithInvoiceByBarcode&gt;b__8</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.TabItem(&lt;&gt;f__AnonymousType0`2&lt;System.Windows.Controls.TabItem,ITTrade.Business.Invoice&gt;)</signature>
                        <name>&lt;FindTabWithInvoiceByBarcode&gt;b__a</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddItemButton_Click</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddTabWithInvoiceBySomeBarcode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>ITTrade.Business.Invoice(ITTrade.Business.InvoiceSaleMode)</signature>
                        <name>AddTabWithNewInvoice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.TabItem)</signature>
                        <name>CloseInvoiceTabTry</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>CloseTabTextBlock_MouseDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>DataGrid_Initialized</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ValidationErrorEventArgs)</signature>
                        <name>DataGridCellTextBox_BindingError</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.TabItem(string)</signature>
                        <name>FindTabWithInvoiceByBarcode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>ITTrade.Business.Invoice()</signature>
                        <name>GetCurrentInvoice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Windows.Controls.DataGrid(System.Windows.DependencyObject)</signature>
                        <name>GetDataGrid</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>ITTrade.Business.Invoice(System.Windows.Controls.TabItem)</signature>
                        <name>GetInvoiceFromTab</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>HandlyEnteredBarcodeButton_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>HandlyEnteredBarcodeTextBox_KeyDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.Business.Invoice)</signature>
                        <name>InsertTabWithInvoiceOnPage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>InvoiceDataGrid_Loaded</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>MenuItem_Click</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>PrintButton_Click</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.MenuAddActions)</signature>
                        <name>ProcessMenuClick</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventArgs)</signature>
                        <name>ProcessMenuClickTry</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ProcessRecivedBarcode</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>RemouveItemButton_Click</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>RemoveFromInvoiceButton_Click</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ScanEmulation_Click</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ScanEmulation2_Click</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Controls.TabItem,&lt;&gt;f__AnonymousType0`2&lt;System.Windows.Controls.TabItem,ITTrade.Business.Invoice&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegateb</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType0`2&lt;System.Windows.Controls.TabItem,ITTrade.Business.Invoice&gt;,System.Windows.Controls.TabItem&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatec</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabControl</signature>
                        <name>InvoicesTabControl</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>menu1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.RadioButton</signature>
                        <name>ProductBarcodeActionAddRadioButton</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.MenuItem</signature>
                        <name>TestScanEmulation</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.MenuItem</signature>
                        <name>TestScanEmulation2</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.TradeWindow/&lt;&gt;c__DisplayClass14</name>
                <newname>ITTrade.TradeWindow/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;CloseInvoiceTabTry&gt;b__12</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.TradeWindow</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabItem</signature>
                        <name>tabItem</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.TradeWindow/&lt;&gt;c__DisplayClass5</name>
                <newname>ITTrade.TradeWindow/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ProcessRecivedBarcode&gt;b__3</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.Business.Invoice</signature>
                        <name>currentInvoice</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>ITTrade.Business.InvoicesProduct</signature>
                        <name>invoicesProduct</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.TradeWindow/&lt;&gt;c__DisplayClassd</name>
                <newname>ITTrade.TradeWindow/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(&lt;&gt;f__AnonymousType0`2&lt;System.Windows.Controls.TabItem,ITTrade.Business.Invoice&gt;)</signature>
                        <name>&lt;FindTabWithInvoiceByBarcode&gt;b__9</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>barcode</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.TradeWindow/ProductBarcodeMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ITTrade.TradeWindow/ProductBarcodeMode</signature>
                        <name>Add</name>
                    </field>
                    <field>
                        <signature>ITTrade.TradeWindow/ProductBarcodeMode</signature>
                        <name>Remove</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.UniversalMessageButtonContext</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Action()</signature>
                        <name>get_ClickHandler</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_DialogResult</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>ITTrade.UniversalMessageButtonContext()</signature>
                        <name>GetDefaultCancelButtonContext</name>
                    </method>
                    <method>
                        <signature>ITTrade.UniversalMessageButtonContext()</signature>
                        <name>GetDefaultOkButtonContext</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>set_ClickHandler</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_DialogResult</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;ClickHandler&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;DialogResult&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTrade.UniversalMessageContext</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ITTrade.UniversalMessageButtonContext()</signature>
                        <name>get_Button1Context</name>
                    </method>
                    <method>
                        <signature>ITTrade.UniversalMessageButtonContext()</signature>
                        <name>get_Button2Context</name>
                    </method>
                    <method>
                        <signature>ITTrade.UniversalMessageButtonContext()</signature>
                        <name>get_CancelButtonContext</name>
                    </method>
                    <method>
                        <signature>System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;()</signature>
                        <name>get_CloseAction</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowCancelButton</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowInDialog</name>
                    </method>
                    <method>
                        <signature>System.Windows.Window()</signature>
                        <name>get_WindowOwnerForCenteringOrNull</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.UniversalMessageButtonContext)</signature>
                        <name>set_Button1Context</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.UniversalMessageButtonContext)</signature>
                        <name>set_Button2Context</name>
                    </method>
                    <method>
                        <signature>void(ITTrade.UniversalMessageButtonContext)</signature>
                        <name>set_CancelButtonContext</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;)</signature>
                        <name>set_CloseAction</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Content</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowCancelButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowInDialog</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window)</signature>
                        <name>set_WindowOwnerForCenteringOrNull</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ITTrade.UniversalMessageButtonContext</signature>
                        <name>_cancelButtonContext</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>ITTrade.UniversalMessageButtonContext</signature>
                        <name>&lt;Button1Context&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>ITTrade.UniversalMessageButtonContext</signature>
                        <name>&lt;Button2Context&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;</signature>
                        <name>&lt;CloseAction&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Content&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowInDialog&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>&lt;WindowOwnerForCenteringOrNull&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTradeControlLibrary.MessageWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>&lt;RegisterAutoClosingThrouDelay&gt;b__2</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;RegisterAutoClosingThrouDelay&gt;b__3</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowInternaly&gt;b__7</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ActionButton_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleareDialog</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseActionInvoke</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.UniversalMessageButtonContext)</signature>
                        <name>CloseWithAction</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;()</signature>
                        <name>get_CloseAction</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DialogMode</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_DialogResultCustom</name>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.TextBox()</signature>
                        <name>GetPopupMessageTextBox</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>MessageWindow_Closed</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RegisterAutoClosingThrouDelay</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;)</signature>
                        <name>set_CloseAction</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DialogMode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_DialogResultCustom</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(ITTrade.UniversalMessageContext)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(ITTrade.UniversalMessageContext)</signature>
                        <name>ShowDialog</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(object, System.Windows.Window)</signature>
                        <name>ShowDialogForWindow</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Window)</signature>
                        <name>ShowForWindow</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(ITTrade.UniversalMessageContext)</signature>
                        <name>ShowInternaly</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>_dialogResultCustom</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;System.Nullable`1&lt;bool&gt;&gt;</signature>
                        <name>&lt;CloseAction&gt;k__BackingField</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DialogMode&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ContentControl</signature>
                        <name>MainPopupTextPlace</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>PART_ActionButton1</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>PART_ActionButton2</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>PART_CancelButton</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ITTradeUtils.UIHelper</name>
                <methodlist>
                    <method>
                        <signature>System.Windows.FrameworkElement(System.Windows.DependencyObject, string)</signature>
                        <name>GetFirstDescendantByName</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ITTradeUtils.WindowHelper</name>
                <methodlist>
                    <method>
                        <signature>System.Windows.Window()</signature>
                        <name>GetActive</name>
                    </method>
                    <method>
                        <signature>System.Windows.Window(System.Windows.DependencyObject)</signature>
                        <name>GetWindow</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>j</name>
                <newname>bf</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>k</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string, int32, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>e</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>f</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>h</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>i</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>j</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>k</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>l</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>m</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>n</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>o</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>p</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>q</name>
                        <newname>u</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>l</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>h</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>i</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>j</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Lock</name>
                <newname>g</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>m</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[], unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>q</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>q</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>q</signature>
                        <name>c</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>n</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>f</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Alignment</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>AboveCenter</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>AboveJustify</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>AboveLeft</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>AboveRight</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>BelowCenter</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>BelowJustify</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>BelowLeft</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>BelowRight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.AztecCodeFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C101X101</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C105X105</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C109X109</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C113X113</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C117X117</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C121X121</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C125X125</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C131X131</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C135X135</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C139X139</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C143X143</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C147X147</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C151X151</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C15X15Compact</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C19X19</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C19X19Compact</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C23X23</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C23X23Compact</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C27X27</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C27X27Compact</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C31X31</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C37X37</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C41X41</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C45X45</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C49X49</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C53X53</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C57X57</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C61X61</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C67X67</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C71X71</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C75X75</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C79X79</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C83X83</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C87X87</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C91X91</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>C95X95</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.BarcodeAlignment</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeAlignment</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeAlignment</signature>
                        <name>Left</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeAlignment</signature>
                        <name>Right</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.BarcodeBuilder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AddChecksum</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AntiAlias</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AztecCodeErrorCorrection</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.AztecCodeFormat()</signature>
                        <name>get_AztecCodeFormat</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_AztecCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AztecCodeRune</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_Background</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BarcodeUnit()</signature>
                        <name>get_BarcodeUnit</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Color()</signature>
                        <name>get_BarColor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarHeight</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarRatio</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarWidth</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BearerBarStyle()</signature>
                        <name>get_BearerBarStyle</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BearerBarWidth</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>get_CodabarStartChar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>get_CodabarStopChar</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Code</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code128()</signature>
                        <name>get_Code128CharSet</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code16k()</signature>
                        <name>get_Code16kMode</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>get_CodeAlignment</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixEncoding()</signature>
                        <name>get_DataMatrixEncoding</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixFormat()</signature>
                        <name>get_DataMatrixFormat</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DataMatrixModuleSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DataMatrixProcessTilde</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayChecksum</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayCode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayLightMarginIndicator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayStartStopChar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Supplement()</signature>
                        <name>get_EanUpcSupplement</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EanUpcSupplementCode</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EanUpcSupplementSeparation</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EanUpcSupplementTopMargin</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Extended</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size()</signature>
                        <name>get_FitBarcodeToSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.FontFamily()</signature>
                        <name>get_FontFamily</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_FontSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontStretch()</signature>
                        <name>get_FontStretch</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontStyle()</signature>
                        <name>get_FontStyle</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FontUnit()</signature>
                        <name>get_FontUnit</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontWeight()</signature>
                        <name>get_FontWeight</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_Foreground</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GuardBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_GuardBarHeight</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HibcFormatHumanReadableText</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.ImageSettings()</signature>
                        <name>get_ImageSettings</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Isbt128DataStructure()</signature>
                        <name>get_Isbt128DataStructure</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCodeValid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseOwner</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.MicroPdf417Version()</signature>
                        <name>get_MicroPdf417Version</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Pdf417AspectRatio</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417Columns</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417CompactionType()</signature>
                        <name>get_Pdf417CompactionType</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection()</signature>
                        <name>get_Pdf417ErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Pdf417FileId</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417Rows</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417SegmentCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417SegmentIndex</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Pdf417Truncated</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeBarsSpacing</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeThickBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeThinBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PlanetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PlanetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Postal4StateAddStartStopChar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateBarsSpacing</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateTrackerBarHeight</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateTrackerBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PostnetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PostnetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeEncoding()</signature>
                        <name>get_QRCodeEncoding</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel()</signature>
                        <name>get_QRCodeErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_QRCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeVersion()</signature>
                        <name>get_QRCodeVersion</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_QuietZone</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Rotate()</signature>
                        <name>get_Rotate</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Symbology()</signature>
                        <name>get_Symbology</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.TelepenEncoding()</signature>
                        <name>get_TelepenEncoding</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>get_TextAlignment</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.UpcE()</signature>
                        <name>get_UpcESystem</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FIM()</signature>
                        <name>get_UspsFimPattern</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UspsHorizontalBarsCount</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingGroup()</signature>
                        <name>GetBarcodeDrawing</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetBarcodeImageBinary</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>GetBarcodeImageSource</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual()</signature>
                        <name>GetBarcodeVisual</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AddChecksum</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AntiAlias</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AztecCodeErrorCorrection</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.AztecCodeFormat)</signature>
                        <name>set_AztecCodeFormat</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_AztecCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AztecCodeRune</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_Background</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BarcodeUnit)</signature>
                        <name>set_BarcodeUnit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Color)</signature>
                        <name>set_BarColor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarHeight</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarRatio</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarWidth</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BearerBarStyle)</signature>
                        <name>set_BearerBarStyle</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BearerBarWidth</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>set_CodabarStartChar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>set_CodabarStopChar</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Code</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code128)</signature>
                        <name>set_Code128CharSet</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code16k)</signature>
                        <name>set_Code16kMode</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>set_CodeAlignment</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixEncoding)</signature>
                        <name>set_DataMatrixEncoding</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixFormat)</signature>
                        <name>set_DataMatrixFormat</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DataMatrixModuleSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DataMatrixProcessTilde</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayChecksum</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayCode</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayLightMarginIndicator</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayStartStopChar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Supplement)</signature>
                        <name>set_EanUpcSupplement</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EanUpcSupplementCode</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EanUpcSupplementSeparation</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EanUpcSupplementTopMargin</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Extended</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Size)</signature>
                        <name>set_FitBarcodeToSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.FontFamily)</signature>
                        <name>set_FontFamily</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_FontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStretch)</signature>
                        <name>set_FontStretch</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStyle)</signature>
                        <name>set_FontStyle</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FontUnit)</signature>
                        <name>set_FontUnit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontWeight)</signature>
                        <name>set_FontWeight</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_Foreground</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GuardBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_GuardBarHeight</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HibcFormatHumanReadableText</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Isbt128DataStructure)</signature>
                        <name>set_Isbt128DataStructure</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseOwner</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.MicroPdf417Version)</signature>
                        <name>set_MicroPdf417Version</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Pdf417AspectRatio</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417Columns</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417CompactionType)</signature>
                        <name>set_Pdf417CompactionType</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417ErrorCorrection)</signature>
                        <name>set_Pdf417ErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Pdf417FileId</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417Rows</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417SegmentCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417SegmentIndex</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Pdf417Truncated</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeBarsSpacing</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeThickBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeThinBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PlanetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PlanetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Postal4StateAddStartStopChar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateBarsSpacing</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateTrackerBarHeight</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateTrackerBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PostnetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PostnetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeEncoding)</signature>
                        <name>set_QRCodeEncoding</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeErrorCorrectionLevel)</signature>
                        <name>set_QRCodeErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_QRCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeVersion)</signature>
                        <name>set_QRCodeVersion</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_QuietZone</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Rotate)</signature>
                        <name>set_Rotate</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Symbology)</signature>
                        <name>set_Symbology</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.TelepenEncoding)</signature>
                        <name>set_TelepenEncoding</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>set_TextAlignment</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.UpcE)</signature>
                        <name>set_UpcESystem</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FIM)</signature>
                        <name>set_UspsFimPattern</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UspsHorizontalBarsCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.Color</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a0</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.TelepenEncoding</signature>
                        <name>a1</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a2</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a3</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a4</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>a5</name>
                    </field>
                    <field>
                        <signature>System.Windows.Size</signature>
                        <name>a6</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>a7</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.FontFamily</signature>
                        <name>a8</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a9</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>aa</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Supplement</signature>
                        <name>ab</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ac</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ad</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.UpcE</signature>
                        <name>ae</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>af</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ag</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>ah</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>ai</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>aj</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ak</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>al</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>am</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>an</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ao</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ap</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>aq</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ar</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BearerBarStyle</signature>
                        <name>as</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>at</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>au</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>av</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>aw</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>ax</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>ay</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>az</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>System.Windows.FontStretch</signature>
                        <name>ba</name>
                    </field>
                    <field>
                        <signature>System.Windows.FontStyle</signature>
                        <name>bb</name>
                    </field>
                    <field>
                        <signature>System.Windows.FontWeight</signature>
                        <name>bc</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>bd</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>be</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeUnit</signature>
                        <name>bf</name>
                    </field>
                    <field>
                        <signature>v</signature>
                        <name>bg</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageSettings</signature>
                        <name>bh</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bi</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>bj</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bk</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bl</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bm</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bn</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>bo</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bp</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>bq</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>br</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bs</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>h</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>i</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>j</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>k</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>l</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>m</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>n</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>o</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>p</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>q</name>
                    </field>
                    <field>
                        <signature>System.Windows.Thickness</signature>
                        <name>r</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>s</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>t</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>u</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>v</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code16k</signature>
                        <name>w</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>y</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>z</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.BarcodeProfessional</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>d</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AddChecksum</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AntiAlias</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AztecCodeErrorCorrection</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.AztecCodeFormat()</signature>
                        <name>get_AztecCodeFormat</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_AztecCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AztecCodeRune</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_Background</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BarcodeAlignment()</signature>
                        <name>get_BarcodeAlignment</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BarcodeUnit()</signature>
                        <name>get_BarcodeUnit</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Color()</signature>
                        <name>get_BarColor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarHeight</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarRatio</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BarWidth</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BearerBarStyle()</signature>
                        <name>get_BearerBarStyle</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BearerBarWidth</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>get_CodabarStartChar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>get_CodabarStopChar</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Code</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code128()</signature>
                        <name>get_Code128CharSet</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code16k()</signature>
                        <name>get_Code16kMode</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>get_CodeAlignment</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixEncoding()</signature>
                        <name>get_DataMatrixEncoding</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixFormat()</signature>
                        <name>get_DataMatrixFormat</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DataMatrixModuleSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DataMatrixProcessTilde</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayChecksum</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayCode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayLightMarginIndicator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisplayStartStopChar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Supplement()</signature>
                        <name>get_EanUpcSupplement</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EanUpcSupplementCode</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EanUpcSupplementSeparation</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EanUpcSupplementTopMargin</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Extended</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size()</signature>
                        <name>get_FitBarcodeToSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.FontFamily()</signature>
                        <name>get_FontFamily</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_FontSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontStretch()</signature>
                        <name>get_FontStretch</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontStyle()</signature>
                        <name>get_FontStyle</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FontUnit()</signature>
                        <name>get_FontUnit</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontWeight()</signature>
                        <name>get_FontWeight</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_Foreground</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GuardBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_GuardBarHeight</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HibcFormatHumanReadableText</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.ImageSettings()</signature>
                        <name>get_ImageSettings</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Isbt128DataStructure()</signature>
                        <name>get_Isbt128DataStructure</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCodeValid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseOwner</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.MicroPdf417Version()</signature>
                        <name>get_MicroPdf417Version</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Pdf417AspectRatio</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417Columns</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417CompactionType()</signature>
                        <name>get_Pdf417CompactionType</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection()</signature>
                        <name>get_Pdf417ErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Pdf417FileId</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417Rows</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417SegmentCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Pdf417SegmentIndex</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Pdf417Truncated</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeBarsSpacing</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeThickBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PharmacodeThinBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PlanetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PlanetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Postal4StateAddStartStopChar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateBarsSpacing</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateTrackerBarHeight</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Postal4StateTrackerBarWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PostnetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PostnetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeEncoding()</signature>
                        <name>get_QRCodeEncoding</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel()</signature>
                        <name>get_QRCodeErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_QRCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeVersion()</signature>
                        <name>get_QRCodeVersion</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_QuietZone</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Rotate()</signature>
                        <name>get_Rotate</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Stretch()</signature>
                        <name>get_Stretch</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Symbology()</signature>
                        <name>get_Symbology</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.TelepenEncoding()</signature>
                        <name>get_TelepenEncoding</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>get_TextAlignment</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.UpcE()</signature>
                        <name>get_UpcESystem</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FIM()</signature>
                        <name>get_UspsFimPattern</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UspsHorizontalBarsCount</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingGroup()</signature>
                        <name>GetBarcodeDrawing</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetBarcodeImageBinary</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>GetBarcodeImageSource</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual()</signature>
                        <name>GetBarcodeVisual</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>MeasureOverride</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>OnRender</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AddChecksum</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AntiAlias</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AztecCodeErrorCorrection</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.AztecCodeFormat)</signature>
                        <name>set_AztecCodeFormat</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_AztecCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AztecCodeRune</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_Background</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BarcodeAlignment)</signature>
                        <name>set_BarcodeAlignment</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BarcodeUnit)</signature>
                        <name>set_BarcodeUnit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Color)</signature>
                        <name>set_BarColor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarHeight</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarRatio</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BarWidth</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BearerBarStyle)</signature>
                        <name>set_BearerBarStyle</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BearerBarWidth</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>set_CodabarStartChar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>set_CodabarStopChar</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Code</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code128)</signature>
                        <name>set_Code128CharSet</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code16k)</signature>
                        <name>set_Code16kMode</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>set_CodeAlignment</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixEncoding)</signature>
                        <name>set_DataMatrixEncoding</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixFormat)</signature>
                        <name>set_DataMatrixFormat</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DataMatrixModuleSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DataMatrixProcessTilde</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayChecksum</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayCode</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayLightMarginIndicator</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisplayStartStopChar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Supplement)</signature>
                        <name>set_EanUpcSupplement</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EanUpcSupplementCode</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EanUpcSupplementSeparation</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EanUpcSupplementTopMargin</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Extended</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Size)</signature>
                        <name>set_FitBarcodeToSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.FontFamily)</signature>
                        <name>set_FontFamily</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_FontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStretch)</signature>
                        <name>set_FontStretch</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStyle)</signature>
                        <name>set_FontStyle</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FontUnit)</signature>
                        <name>set_FontUnit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontWeight)</signature>
                        <name>set_FontWeight</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_Foreground</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GuardBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_GuardBarHeight</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HibcFormatHumanReadableText</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Isbt128DataStructure)</signature>
                        <name>set_Isbt128DataStructure</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseOwner</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.MicroPdf417Version)</signature>
                        <name>set_MicroPdf417Version</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Pdf417AspectRatio</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417Columns</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417CompactionType)</signature>
                        <name>set_Pdf417CompactionType</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417ErrorCorrection)</signature>
                        <name>set_Pdf417ErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Pdf417FileId</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417Rows</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417SegmentCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Pdf417SegmentIndex</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Pdf417Truncated</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeBarsSpacing</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeThickBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PharmacodeThinBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PlanetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PlanetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Postal4StateAddStartStopChar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateBarsSpacing</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateTrackerBarHeight</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Postal4StateTrackerBarWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PostnetHeightShortBar</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PostnetHeightTallBar</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeEncoding)</signature>
                        <name>set_QRCodeEncoding</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeErrorCorrectionLevel)</signature>
                        <name>set_QRCodeErrorCorrectionLevel</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_QRCodeModuleSize</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeVersion)</signature>
                        <name>set_QRCodeVersion</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_QuietZone</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Rotate)</signature>
                        <name>set_Rotate</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Stretch)</signature>
                        <name>set_Stretch</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Symbology)</signature>
                        <name>set_Symbology</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.TelepenEncoding)</signature>
                        <name>set_TelepenEncoding</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>set_TextAlignment</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.UpcE)</signature>
                        <name>set_UpcESystem</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FIM)</signature>
                        <name>set_UspsFimPattern</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UspsHorizontalBarsCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeBuilder</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AddChecksumProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AntiAliasProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AztecCodeErrorCorrectionProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AztecCodeFormatProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AztecCodeModuleSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AztecCodeRuneProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.DrawingGroup</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarcodeAlignmentProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarcodeUnitProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarColorProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarRatioProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BarWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BearerBarStyleProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BearerBarWidthProperty</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CodabarStartCharProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CodabarStopCharProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Code128CharSetProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Code16kModeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CodeAlignmentProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CodeProperty</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageSettings</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DataMatrixEncodingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DataMatrixFormatProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DataMatrixModuleSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DataMatrixProcessTildeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DisplayChecksumProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DisplayCodeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DisplayLightMarginIndicatorProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DisplayStartStopCharProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EanUpcSupplementCodeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EanUpcSupplementProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EanUpcSupplementSeparationProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EanUpcSupplementTopMarginProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ExtendedProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FitBarcodeToSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontFamilyProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontStretchProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontStyleProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontUnitProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FontWeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ForegroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>GuardBarHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>GuardBarProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HibcFormatHumanReadableTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Isbt128DataStructureProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MicroPdf417VersionProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417AspectRatioProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417ColumnsProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417CompactionTypeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417ErrorCorrectionLevelProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417FileIdProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417RowsProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417SegmentCountProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417SegmentIndexProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Pdf417TruncatedProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PharmacodeBarsSpacingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PharmacodeThickBarWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PharmacodeThinBarWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PlanetHeightShortBarProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PlanetHeightTallBarProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Postal4StateAddStartStopCharProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Postal4StateBarsSpacingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Postal4StateTrackerBarHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>Postal4StateTrackerBarWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PostnetHeightShortBarProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PostnetHeightTallBarProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>QRCodeEncodingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>QRCodeErrorCorrectionLevelProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>QRCodeModuleSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>QRCodeVersionProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>QuietZoneProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>RotateProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StretchProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SymbologyProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TelepenEncodingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextAlignmentProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>UpcESystemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>UspsFimPatternProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>UspsHorizontalBarsCountProperty</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.BarcodeUnit</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeUnit</signature>
                        <name>Centimeter</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeUnit</signature>
                        <name>Inch</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeUnit</signature>
                        <name>Millimeter</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BarcodeUnit</signature>
                        <name>Mils</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.BearerBarStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.BearerBarStyle</signature>
                        <name>Frame</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BearerBarStyle</signature>
                        <name>HorizontalRules</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BearerBarStyle</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.CodabarStartStopChar</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>C</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>D</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Code128</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>C</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Code16k</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Code16k</signature>
                        <name>Mode0</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code16k</signature>
                        <name>Mode1</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code16k</signature>
                        <name>Mode2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.DataMatrixEncoding</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>Ascii</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>Base256</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>C40</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>Text</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.DataMatrixFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C104X104</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C10X10</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C120X120</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C12X12</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C12X26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C12X36</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C132X132</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C144X144</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C14X14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C16X16</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C16X36</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C16X48</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C18X18</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C20X20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C22X22</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C24X24</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C26X26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C32X32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C36X36</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C40X40</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C44X44</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C48X48</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C52X52</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C64X64</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C72X72</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C80X80</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C88X88</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C8X18</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C8X32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>C96X96</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.FIM</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>C</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>D</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.FontUnit</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>Inch</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>Millimeter</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>Pixel</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>Point</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.ImageFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Bmp</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Gif</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Jpeg</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Png</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Tiff</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>Wmp</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.ImageSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Dpi</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.ImageFormat()</signature>
                        <name>get_ImageFormat</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_JpegQualityLevel</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapPalette()</signature>
                        <name>get_Palette</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.PixelFormat()</signature>
                        <name>get_PixelFormat</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.PngInterlaceOption()</signature>
                        <name>get_PngInterlace</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.TiffCompressOption()</signature>
                        <name>get_TiffCompression</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_WmpImageQualityLevel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WmpLossless</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_WmpQualityLevel</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Dpi</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.ImageFormat)</signature>
                        <name>set_ImageFormat</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_JpegQualityLevel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Imaging.BitmapPalette)</signature>
                        <name>set_Palette</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PixelFormat)</signature>
                        <name>set_PixelFormat</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Imaging.PngInterlaceOption)</signature>
                        <name>set_PngInterlace</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Imaging.TiffCompressOption)</signature>
                        <name>set_TiffCompression</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_WmpImageQualityLevel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WmpLossless</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_WmpQualityLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.ImageFormat</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.PixelFormat</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Imaging.BitmapPalette</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Imaging.PngInterlaceOption</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Imaging.TiffCompressOption</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>h</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>i</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>j</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Isbt128DataStructure</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS001</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS002</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS003</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS004</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS005</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS006</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS007</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS008</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS009</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS010</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS011</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS012</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS013</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS014</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS015</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS016</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS017</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS018</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS019</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS020</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS021</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS022</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS023</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS024</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS025</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>DS026</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.MicroPdf417Version</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X11</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X17</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X24</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V1X28</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X11</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X17</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X23</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V2X8</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X10</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X12</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X15</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X38</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X44</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X6</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V3X8</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X10</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X12</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X15</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X38</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X4</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X44</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X6</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>V4X8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Pdf417CompactionType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>Binary</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>Numeric</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>Text</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Pdf417ErrorCorrection</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level0</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level1</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level2</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level3</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level4</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level5</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level6</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level7</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>Level8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.QRCodeEncoding</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>AlphaNumeric</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>Byte</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>Kanji</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>Numeric</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.QRCodeErrorCorrectionLevel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>Q</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.QRCodeVersion</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V01</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V02</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V03</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V04</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V05</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V06</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V07</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V08</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V09</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V10</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V11</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V12</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V13</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V15</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V16</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V17</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V18</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V19</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V20</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V21</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V22</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V23</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V24</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V25</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V26</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V27</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V28</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V29</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V30</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V31</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V33</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V34</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V35</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V36</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V37</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V38</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V39</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>V40</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Rotate</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>Degree180</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>Degree270</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>Degree90</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Stretch</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Stretch</signature>
                        <name>Fill</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Stretch</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Supplement</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Supplement</signature>
                        <name>Digits2</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Supplement</signature>
                        <name>Digits5</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Supplement</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.Symbology</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>AustraliaPost</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>AztecCode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Codabar</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code11</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code16k</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code32</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code39</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Code93</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>CompactPdf417</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>DataMatrix</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>DeutschePostIdentcode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>DeutschePostLeitcode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Ean13</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Ean8</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Ean99</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>EanVelocity</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>FedExGround96</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>HibcLic128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>HibcLic39</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>HibcPas128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>HibcPas39</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Industrial2of5</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Interleaved2of5</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Isbn</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Isbt128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Ismn</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Issn</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>ItalianPost25</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Itf14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Jan13</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Jan8</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>MacroPdf417</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>MicroPdf417</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Msi</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>NumlyNumber</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Opc</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Pdf417</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Pharmacode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Planet</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Postnet</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Pzn</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>QRCode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>RoyalMail</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>RoyalTpgPostKix</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Scc14</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Semacode</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>SingaporePost</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Sscc18</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>SwissPostParcel</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>Telepen</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UccEan128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UpcA</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UpcE</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsFim</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsHorizontalBars</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsIntelligentMail</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsOneCode4CB</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsPicUccEan128</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsSackLabel</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>UspsTrayLabel</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>VicsBol</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Symbology</signature>
                        <name>VicsScacPro</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.TelepenEncoding</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.TelepenEncoding</signature>
                        <name>Ascii</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.TelepenEncoding</signature>
                        <name>Numeric</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Neodynamic.WPF.UpcE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Neodynamic.WPF.UpcE</signature>
                        <name>System0</name>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.UpcE</signature>
                        <name>System1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>o</name>
                <newname>ba</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64(Neodynamic.WPF.BarcodeUnit, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64(Neodynamic.WPF.FontUnit, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapEncoder(Neodynamic.WPF.ImageSettings, System.Windows.Media.Imaging.BitmapSource)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapSource(System.Windows.Media.DrawingVisual, float64, float64, System.Windows.Media.PixelFormat, System.Windows.Media.Imaging.BitmapPalette)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapSource(System.Windows.Media.Imaging.BitmapSource, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapSource(System.Windows.Media.Imaging.BitmapSource, Neodynamic.WPF.Rotate)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(Neodynamic.WPF.BarcodeUnit, System.Windows.Size)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>d</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>e</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>a</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>p</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>f</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>q</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(q)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(q, q)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int32[], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(int32, int32, System.Random)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(int64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(q, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(q, q, q)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(unsigned int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>q(unsigned int64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Random)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(q, q, q, q)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int32[], int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>q()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>q(int32, System.Random)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>q(q, int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(q, q, q, q)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>c</name>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>f</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>f</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>g</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>g</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>h</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>q(q)</signature>
                        <name>h</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>i</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>j</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>k</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(q, q)</signature>
                        <name>l</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>m</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>n</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>o</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>q(q, q)</signature>
                        <name>p</name>
                        <newname>q</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>d</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>r</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(a4[]&amp;, int32, unsigned int8[]&amp;, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32[]&amp;, int32&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(int32[]&amp;, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[]&amp;, int32, a4[]&amp;, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[]&amp;, int32, unsigned int16)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[]&amp;, int32, unsigned int16, unsigned int32&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int16(unsigned int16)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>unsigned int16(unsigned int8[]&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[]&amp;, int32, unsigned int16)</signature>
                        <name>b</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[]</signature>
                        <name>a</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>c</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>d</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>e</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>f</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>g</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>h</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>s</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>t</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>f</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>g</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>h</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>u</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>v</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64(System.Windows.Size, System.Windows.Size)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(float32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(float32, float32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32[], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(string[], string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(string[][], string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment(Neodynamic.WPF.Alignment)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string, Neodynamic.WPF.Alignment, float64)</signature>
                        <name>a</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.FormattedText(string, System.Windows.Media.Brush)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Typeface()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size, System.Windows.Size, System.Windows.Size)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.AztecCodeFormat)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.BearerBarStyle)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code128)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Code16k)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixEncoding)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.DataMatrixFormat)</signature>
                        <name>a</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FontUnit)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.ImageSettings)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Isbt128DataStructure)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.MicroPdf417Version)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417CompactionType)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeEncoding)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeErrorCorrectionLevel)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.QRCodeVersion)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Rotate)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Supplement)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.TelepenEncoding)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.UpcE)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStretch)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontStyle)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontWeight)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Color)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, bool, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, bool, float64, float64, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, float64, float64, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, string, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, string, string, float64, float64)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.FontFamily)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Size)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a0</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>a1</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a2</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a3</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a4</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>a5</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>a6</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>a7</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>a8</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>a9</name>
                        <newname>b0</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>aa</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ab</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ac</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Supplement()</signature>
                        <name>ad</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417CompactionType()</signature>
                        <name>ae</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>af</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>ag</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ah</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel()</signature>
                        <name>ai</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>aj</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ak</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>al</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>am</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>an</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ao</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.FontFamily()</signature>
                        <name>ap</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>aq</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FontUnit()</signature>
                        <name>ar</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>as</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>at</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code16k()</signature>
                        <name>au</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>av</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>aw</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ax</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ay</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual()</signature>
                        <name>az</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>float64(System.Windows.Size, System.Windows.Size)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(System.Windows.Size)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>b</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>b</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.CodabarStartStopChar)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.FIM)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Pdf417ErrorCorrection)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, char)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, float64, float64, float64)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext, string)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.FIM()</signature>
                        <name>b0</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b1</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeEncoding()</signature>
                        <name>b2</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>b3</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Windows.FontStretch()</signature>
                        <name>ba</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontStyle()</signature>
                        <name>bb</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>bc</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Isbt128DataStructure()</signature>
                        <name>bd</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.UpcE()</signature>
                        <name>be</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>bf</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Color()</signature>
                        <name>bg</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>bh</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.MicroPdf417Version()</signature>
                        <name>bi</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bj</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bk</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.ImageSettings()</signature>
                        <name>bl</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>bm</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.TelepenEncoding()</signature>
                        <name>bn</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Code128()</signature>
                        <name>bo</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>System.Windows.FontWeight()</signature>
                        <name>bp</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bq</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Alignment()</signature>
                        <name>br</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bs</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>bt</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.CodabarStartStopChar()</signature>
                        <name>bu</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bv</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.BearerBarStyle()</signature>
                        <name>bw</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bx</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>by</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>bz</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(System.Windows.Size)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>c</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>c</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(Neodynamic.WPF.Alignment)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>char(string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.TextAlignment(Neodynamic.WPF.Alignment)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(char)</signature>
                        <name>d</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>d</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>d</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>e</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>e</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>e</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>e</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>char(string)</signature>
                        <name>f</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>f</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>f</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>g</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixFormat()</signature>
                        <name>g</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>g</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>g</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.DataMatrixEncoding()</signature>
                        <name>h</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>h</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>h</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>h</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>i</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>i</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>i</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>i</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>j</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size()</signature>
                        <name>j</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>j</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>j</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>j</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>k</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>k</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>k</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>k</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>k</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>l</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>l</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>l</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>l</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>l</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>m</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.AztecCodeFormat()</signature>
                        <name>m</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>m</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>m</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>m</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>n</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>n</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>n</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>n</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>n</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>o</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>o</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>o</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>o</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>o</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>p</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>p</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>p</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>p</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>p</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>q</name>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection()</signature>
                        <name>q</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>q</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>r</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>r</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>r</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.Rotate()</signature>
                        <name>s</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>s</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>s</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>t</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>t</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>t</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>u</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>u</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>u</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>v</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>v</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual()</signature>
                        <name>w</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.FormattedText(string)</signature>
                        <name>w</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>x</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>x</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>Neodynamic.WPF.QRCodeVersion()</signature>
                        <name>y</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.DrawingVisual(string)</signature>
                        <name>y</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.SolidColorBrush()</signature>
                        <name>z</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>z</name>
                        <newname>aa</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Supplement</signature>
                        <name>a0</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a1</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>a2</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>a3</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>a4</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.UpcE</signature>
                        <name>a5</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FIM</signature>
                        <name>a6</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a7</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>a8</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417CompactionType</signature>
                        <name>a9</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.FontFamily</signature>
                        <name>aa</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ab</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.FontStretch</signature>
                        <name>ac</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.FontStyle</signature>
                        <name>ad</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.FontWeight</signature>
                        <name>ae</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>af</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.FontUnit</signature>
                        <name>ag</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ah</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ai</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>aj</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ak</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>al</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>am</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>an</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.BearerBarStyle</signature>
                        <name>ao</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>ap</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>aq</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.CodabarStartStopChar</signature>
                        <name>ar</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>as</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code128</signature>
                        <name>at</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Code16k</signature>
                        <name>au</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>av</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixFormat</signature>
                        <name>aw</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.DataMatrixEncoding</signature>
                        <name>ax</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ay</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>az</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Pdf417ErrorCorrection</signature>
                        <name>ba</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bb</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bc</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bd</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>be</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeEncoding</signature>
                        <name>bf</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeVersion</signature>
                        <name>bg</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.QRCodeErrorCorrectionLevel</signature>
                        <name>bh</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bi</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.TelepenEncoding</signature>
                        <name>bj</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bk</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bl</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Isbt128DataStructure</signature>
                        <name>bm</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bn</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bo</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>bp</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bq</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.MicroPdf417Version</signature>
                        <name>br</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.AztecCodeFormat</signature>
                        <name>bs</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bt</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>bu</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.SolidColorBrush</signature>
                        <name>bv</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>bw</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>f</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Color</signature>
                        <name>g</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>h</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>i</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>j</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>k</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Alignment</signature>
                        <name>l</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>n</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>o</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>p</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>q</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Thickness</signature>
                        <name>r</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>s</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>t</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Size</signature>
                        <name>u</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.Rotate</signature>
                        <name>v</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Neodynamic.WPF.ImageSettings</signature>
                        <name>w</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.GuidelineSet</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>y</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Brush</signature>
                        <name>z</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>w</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32[], int32[], int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>int32[](int32, string)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(int32, int32, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, bool, string, int32[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32, int32[])</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32[]&amp;, int32, int32, int32, int32)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(int32[], int32, int32, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(string, char[]&amp;, char[]&amp;)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(string, int32, bool)</signature>
                        <name>a</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string(int32, int32, bool)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>c</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>e</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>b</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>d</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>e</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>f</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>g</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>h</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>j</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>k</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>l</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>n</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>o</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>p</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>q</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>r</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>s</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>t</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>x</name>
                <newname>a1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>c</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>XamlGeneratedNamespace.GeneratedInternalTypeHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.EventInfo, object, System.Delegate)</signature>
                        <name>AddEventHandler</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, object, string)</signature>
                        <name>CreateDelegate</name>
                    </method>
                    <method>
                        <signature>object(System.Type, System.Globalization.CultureInfo)</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>object(System.Reflection.PropertyInfo, object, System.Globalization.CultureInfo)</signature>
                        <name>GetPropertyValue</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.PropertyInfo, object, object, System.Globalization.CultureInfo)</signature>
                        <name>SetPropertyValue</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>y</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>b</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>b</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>c</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>d</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>e</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>z</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>a</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>b</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>b</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>char(string)</signature>
                        <name>c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>d</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>e</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>a</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>242</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>1933</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>1435</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>140</statistic>
            <statistic>57,85%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>686</statistic>
            <statistic>35,49%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>594</statistic>
            <statistic>41,39%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_a'</description>
            <statistic>134</statistic>
            <statistic>6,93%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>88</statistic>
            <statistic>4,55%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>67</statistic>
            <statistic>3,47%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_b'</description>
            <statistic>53</statistic>
            <statistic>2,74%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>38</statistic>
            <statistic>1,97%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_c'</description>
            <statistic>28</statistic>
            <statistic>1,45%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>22</statistic>
            <statistic>1,14%</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>